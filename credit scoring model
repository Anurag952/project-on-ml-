# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t_ByHJPPkC2jQXA9iugDlodRh_s7dhXA
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

import pandas as pd

# Create a dictionary with the data
data = {
    'age': [25, 45, 35, 50, 23, 30, 40, 29, 36, 31],
    'income': [50000, 85000, 64000, 90000, 32000, 54000, 75000, 61000, 68000, 53000],
    'loan_amount': [10000, 20000, 15000, 25000, 5000, 12000, 18000, 14000, 16000, 11000],
    'default': [0, 0, 1, 0, 1, 0, 0, 1, 0, 0]
}

# Create a DataFrame
df = pd.DataFrame(data)

# Save the DataFrame to a CSV file
df.to_csv('credit_data.csv', index=False)

print("CSV file 'credit_data.csv' created successfully.")

# Load dataset
data = pd.read_csv('credit_data.csv')

# Display the first few rows of the data
print(data.head())

# Define features (X) and target (y)
X = data[['age', 'income', 'loan_amount']]
y = data['default']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Standardize the feature data
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Create the Logistic Regression model
model = LogisticRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f'Accuracy: {accuracy}')
print('Confusion Matrix:')
print(conf_matrix)
print('Classification Report:')
print(class_report)

